#!/bin/bash -e

TOP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )"
ARTIFACTS_DIR="${TOP_DIR}/dist/artifacts"
SCRIPTS_DIR="${TOP_DIR}/scripts"
PACKAGE_HARVESTER_OS_DIR="${TOP_DIR}/package/harvester-os"

mkdir -p ${ARTIFACTS_DIR}

source ${SCRIPTS_DIR}/version

BASE_OS_IMAGE="rancher/harvester-os:dev-head"
HARVESTER_OS_IMAGE=rancher/harvester-os:$VERSION

cd ${PACKAGE_HARVESTER_OS_DIR}
docker build --pull \
	--build-arg BASE_OS_IMAGE="${BASE_OS_IMAGE}" \
	--build-arg CACHEBUST="$(date)" \
	-t ${HARVESTER_OS_IMAGE} .

# Copy kernel, initrd out for PXE boot
KERNEL=$(docker run --rm ${HARVESTER_OS_IMAGE} readlink /boot/vmlinuz)
INITRD=$(docker run --rm ${HARVESTER_OS_IMAGE} readlink /boot/initrd)
docker create --cidfile=os-img-container ${HARVESTER_OS_IMAGE}
docker cp $(<os-img-container):/boot/${KERNEL} ${ARTIFACTS_DIR}/harvester-vmlinuz-${ARCH}
docker cp $(<os-img-container):/boot/${INITRD} ${ARTIFACTS_DIR}/harvester-initrd-${ARCH}
chmod +r ${ARTIFACTS_DIR}/harvester-initrd-${ARCH}
docker rm $(<os-img-container) && rm -f os-img-container

# build ISO
ISO_PREFIX=harvester-${ARCH}
[ -d iso ] && yq e ".overlay.isoimage = \"$(pwd)/iso\"" iso.yaml -i
luet-makeiso iso.yaml --image "${HARVESTER_OS_IMAGE}" --output ${ARTIFACTS_DIR}/${ISO_PREFIX}

# remove leading directory components of the ISO name
CHECKSUM_FILE=${ARTIFACTS_DIR}/${ISO_PREFIX}.iso.sha256
CHECKSUM=$(cat $CHECKSUM_FILE | awk '{print $1}')
echo "$CHECKSUM ${ISO_PREFIX}.iso" > $CHECKSUM_FILE

# Extract the squashfs image for PXE boot
xorriso -osirrox on -indev ${ARTIFACTS_DIR}/${ISO_PREFIX}.iso -extract /rootfs.squashfs ${ARTIFACTS_DIR}/harvester-rootfs-${ARCH}.squashfs
