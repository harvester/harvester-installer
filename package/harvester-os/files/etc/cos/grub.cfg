# Override this file until https://github.com/rancher-sandbox/cOS-toolkit/issues/766 is done.
set timeout=10

set env_file="/grubenv"
search --file --set=env_blk "${env_file}"

if [ "${env_blk}" ] ; then
  load_env -f "(${env_blk})${env_file}"
fi

if [ "${next_entry}" ]; then
  set default="${next_entry}"
  set next_entry=
  save_env -f "(${env_blk})${env_file}" next_entry
else
  set default="${saved_entry}"
fi

set fallback="0 1 2"
set gfxmode=auto
set gfxpayload=keep
insmod all_video
insmod gfxterm
insmod loopback
insmod squash4

menuentry "cOS" --id cos {
  search.fs_label COS_STATE root
  set img=/cOS/active.img
  set label=COS_ACTIVE
  loopback loop0 /$img
  set root=($root)
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd
  initrd (loop0)$initramfs
}

menuentry "cOS (debug)" --id cos-debug {
  search.fs_label COS_STATE root
  set img=/cOS/active.img
  set label=COS_ACTIVE
  loopback loop0 /$img
  set root=($root)
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd $crash_kernel_params
  initrd (loop0)$initramfs
}

menuentry "cOS (fallback)" --id fallback {
  search.fs_label COS_STATE root
  set img=/cOS/passive.img
  set label=COS_PASSIVE
  loopback loop0 /$img
  set root=($root)
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd
  initrd (loop0)$initramfs
}

menuentry "cOS recovery" --id recovery {
  if search.file /cOS/recovery.squashfs ; then
    set img=/cOS/recovery.squashfs
    set recoverylabel=COS_RECOVERY
  else
    set img=/cOS/recovery.img
  fi
  search.fs_label COS_RECOVERY root
  set label=COS_SYSTEM
  loopback loop0 /$img
  set root=($root)
  source (loop0)/etc/cos/bootargs.cfg
  linux (loop0)$kernel $kernelcmd
  initrd (loop0)$initramfs
}
